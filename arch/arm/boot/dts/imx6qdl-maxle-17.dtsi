/*
 * Copyright 2012 Freescale Semiconductor, Inc.
 * Copyright 2011 Linaro Ltd.
 *
 * The code contained herein is licensed under the GNU General Public
 * License. You may obtain a copy of the GNU General Public License
 * Version 2 or later at the following locations:
 *
 * http://www.opensource.org/licenses/gpl-license.html
 * http://www.gnu.org/copyleft/gpl.html
 */

/ {
	aliases {
		mxcfb0 = &mxcfb1;
		mxcfb1 = &mxcfb2;
		mxcfb2 = &mxcfb3;
		mxcfb3 = &mxcfb4;
		ethernet0 = &fec;
	};

	memory {
		reg = <0x10000000 0x40000000>;
	};

	hannstar_cabc {
		compatible = "hannstar,cabc";

		lvds0 {
			gpios = <&gpio6 15 GPIO_ACTIVE_HIGH>;
			cabc-enable = <1>;
		};

		lvds1 {
			gpios = <&gpio6 16 GPIO_ACTIVE_HIGH>;
			cabc-enable = <1>;
		};
	};

/*
	battery: max8903@0 {
		compatible = "fsl,max8903-charger";
		pinctrl-names = "default";
		dok_input = <&gpio2 24 1>;
		uok_input = <&gpio1 27 1>;
		chg_input = <&gpio3 23 1>;
		flt_input = <&gpio5 2 1>;
		fsl,dcm_always_high;
		fsl,dc_valid;
		fsl,usb_valid;
		status = "okay";
	};

	leds {
		compatible = "gpio-leds";

		charger-led {
			gpios = <&gpio1 2 0>;
			linux,default-trigger = "max8903-charger-charging";
			retain-state-suspended;
		};
	};
*/

	regulators {
		compatible = "simple-bus";

		reg_usb_otg_vbus: usb_otg_vbus {
			compatible = "regulator-fixed";
			regulator-name = "usb_otg_vbus";
			regulator-min-microvolt = <5000000>;
			regulator-max-microvolt = <5000000>;
			gpio = <&gpio3 22 0>;
			enable-active-high;
		};

		reg_usb_h1_vbus: usb_h1_vbus {
			compatible = "regulator-fixed";
			regulator-name = "usb_h1_vbus";
			regulator-min-microvolt = <5000000>;
			regulator-max-microvolt = <5000000>;
			gpio = <&gpio1 29 0>;
			enable-active-high;
		};
/* maxle added. See sabrelite */
		reg_2p5v: 2p5v {
			compatible = "regulator-fixed";
			regulator-name = "2P5V";
			regulator-min-microvolt = <2500000>;
			regulator-max-microvolt = <2500000>;
			regulator-always-on;
		};

		reg_3p3v: 3p3v {
			compatible = "regulator-fixed";
			regulator-name = "3P3V";
			regulator-min-microvolt = <3300000>;
			regulator-max-microvolt = <3300000>;
			regulator-always-on;
		};
/* end added */

		reg_mipi_dsi_pwr_on: mipi_dsi_pwr_on {
			compatible = "regulator-fixed";
			regulator-name = "mipi_dsi_pwr_on";
			gpio = <&gpio6 14 0>;
			enable-active-high;
		};

		reg_sensor: sensor_supply {
			compatible = "regulator-fixed";
			regulator-name = "sensor-supply";
			regulator-min-microvolt = <3300000>;
			regulator-max-microvolt = <3300000>;
			gpio = <&gpio2 31 0>;
			startup-delay-us = <500>;
			enable-active-high;
		};
	};

	gpio-keys {
		compatible = "gpio-keys";
		power {
			label = "Power Button";
			gpios = <&gpio3 29 1>;
			linux,code = <116>; /* KEY_POWER */
			gpio-key,wakeup;
		};

		volume-up {
			label = "Volume Up";
			gpios = <&gpio1 4 1>;
			linux,code = <115>; /* KEY_VOLUMEUP */
		};

		volume-down {
			label = "Volume Down";
			gpios = <&gpio1 5 1>;
			linux,code = <114>; /* KEY_VOLUMEDOWN */
		};
	};

	sound {
		compatible = "fsl,imx6q-maxle-sgtl5000",
			     "fsl,imx-audio-sgtl5000";
		model = "imx6q-maxle-sgtl5000";
		ssi-controller = <&ssi2>; 
		audio-codec = <&codec>;
		audio-routing =
			"MIC_IN", "Mic Jack",
			"Mic Jack", "Mic Bias",
			"Headphone Jack", "HP_OUT";
		mux-int-port = <2>;
		mux-ext-port = <3>;
//		hp-det-gpios = <&gpio7 8 1>;
//		mic-det-gpios = <&gpio1 9 1>;
	};

	sound-hdmi {
		compatible = "fsl,imx6q-audio-hdmi",
			     "fsl,imx-audio-hdmi";
		model = "imx-audio-hdmi";
		hdmi-controller = <&hdmi_audio>;
	};

	mxcfb1: fb@0 {
		compatible = "fsl,mxc_sdc_fb";
		disp_dev = "ldb";
		interface_pix_fmt = "RGB666";
		mode_str ="LDB-XGA";
		default_bpp = <16>;
		int_clk = <0>;
		late_init = <0>;
		status = "disabled";
	};

	mxcfb2: fb@1 {
		compatible = "fsl,mxc_sdc_fb";
		disp_dev = "hdmi";
		interface_pix_fmt = "RGB24";
		mode_str ="1920x1080M@60";
		//mode_str ="1280x1024M@60";
		default_bpp = <24>;
		int_clk = <0>;
		late_init = <0>;
		status = "disabled";
	};

	mxcfb3: fb@2 {
		compatible = "fsl,mxc_sdc_fb";
		disp_dev = "lcd";
		interface_pix_fmt = "RGB565";
		mode_str ="CLAA-WVGA";
		default_bpp = <16>;
		int_clk = <0>;
		late_init = <0>;
		status = "disabled";
	};

	mxcfb4: fb@3 {
		compatible = "fsl,mxc_sdc_fb";
		disp_dev = "ldb";
		interface_pix_fmt = "RGB666";
		mode_str ="LDB-XGA";
		default_bpp = <16>;
		int_clk = <0>;
		late_init = <0>;
		status = "disabled";
	};

	lcd@0 {
		compatible = "fsl,lcd";
		ipu_id = <0>;
		disp_id = <0>;
		default_ifmt = "RGB565";
		pinctrl-names = "default";
		pinctrl-0 = <&pinctrl_ipu1_1>;
//		status = "okay";
        status = "disabled";
	};

	backlight {
		compatible = "pwm-backlight";
		pwms = <&pwm1 0 5000000>;
		brightness-levels = <0 4 8 16 32 64 128 255>;
		default-brightness-level = <7>;
	};

	v4l2_cap_0 {
		compatible = "fsl,imx6q-v4l2-capture";
		ipu_id = <0>;
		csi_id = <0>;
		mclk_source = <0>;
		status = "okay";
	};

	v4l2_cap_1 {
		compatible = "fsl,imx6q-v4l2-capture";
		ipu_id = <0>;
		csi_id = <1>;
		mclk_source = <0>;
		status = "okay";
	};

	v4l2_out {
		compatible = "fsl,mxc_v4l2_output";
		status = "okay";
	};

	mipi_dsi_reset: mipi-dsi-reset {
		compatible = "gpio-reset";
		reset-gpios = <&gpio6 11 GPIO_ACTIVE_LOW>;
		reset-delay-us = <50>;
		#reset-cells = <0>;
	};
};

&audmux {
	pinctrl-names = "default";
	pinctrl-0 = <&pinctrl_audmux_2>;
	status = "okay";
};

&cpu0 {
	arm-supply = <&sw1a_reg>;
	soc-supply = <&sw1c_reg>;
	pu-supply = <&pu_dummy>; /* use pu_dummy if VDDSOC share with VDDPU */
};

&ecspi1 {
	fsl,spi-num-chipselects = <1>;
	cs-gpios = <&gpio4 9 0>;
	pinctrl-names = "default";
	pinctrl-0 = <&pinctrl_ecspi1_2>;
	status = "okay";

	/* bei maxle V1 */
  #if 0   /* MAXLE V1 */
	flashnix: m25p80@0 {
		#address-cells = <1>;
		#size-cells = <1>;
		compatible = "st,m25p32";
		spi-max-frequency = <20000000>;
		reg = <0>;
		partition@0 {
			label = "U-Boot";
			reg = <0x0 0xC0000>;
			//read-only;
		};
		partition@C0000 {
			label = "env";
			reg = <0xc0000 0x10000>;
			//read-only;
		};
		partition@D0000 {
			label = "Kernel";
			reg = <0xd0000 0x320000>;
		};
		partition@3F0000 {
			label = "bdinfo";
			reg = <0x3f0000 0x10000>;
			//read-only;
		};
	};
  #endif

};

&ecspi3 {
	fsl,spi-num-chipselects = <1>;
	cs-gpios = <&gpio4 24 0>;
	pinctrl-names = "default";
	pinctrl-0 = <&pinctrl_ecspi3_1>;
	status = "okay";

#if 1  /* maxle V2 */
	flash: m25p80@0 {
		#address-cells = <1>;
		#size-cells = <1>;
		compatible = "st,m25p32";
		spi-max-frequency = <20000000>;
		reg = <0>;
		
		partition@0 {
			label = "U-Boot";
			reg = <0x0 0xC0000>;
			//read-only;
		};
		partition@C0000 {
			label = "env";
			reg = <0xc0000 0x10000>;
			//read-only;
		};
		partition@D0000 {
			label = "Kernel";
			reg = <0xd0000 0x320000>;
		};
		partition@3F0000 {
			label = "bdinfo";
			reg = <0x3f0000 0x10000>;
			//read-only;
		};

	};
#endif  /* end maxle V2 */


};

&fec { 
	pinctrl-names = "default";
	pinctrl-0 = <&pinctrl_enet_4>;
	phy-mode = "rgmii";
	phy-reset-duration = <10>;
#if 0
	/* die Reset-Leitung wird richtig bedient, aber wenn sie benutzt wird
	    laeuft das Net nicht. Ist auch bei SabreLite auskommentiert!
	    m.E. stimmt hier das ganze Prinzip nicht! (fixup wird nicht aufgerufen, etc.)		
	 */ 
	phy-reset-gpios = <&gpio1 25 0>;  /* reset bei maxle (muss auskommentiert sein */
#endif
	//mac-address = [00 01 02 03 04 05];   //wird von uboot gefuellt, wenn vorhanden
	local-mac-address = [00 17 53 00 00 01]; //wird normalerweise von uboot erzeugt
	status = "okay";
};

&gpc {
	fsl,cpu_pupscr_sw2iso = <0xf>;
	fsl,cpu_pupscr_sw = <0xf>;
	fsl,cpu_pdnscr_iso2sw = <0x1>;
	fsl,cpu_pdnscr_iso = <0x1>;
	fsl,ldo-bypass = <1>; /* use ldo-bypass, u-boot will check it and configure */
	fsl,wdog-reset = <2>; /* watchdog select of reset source */
	pu-supply = <&pu_dummy>; /* ldo-bypass:use pu_dummy if VDDSOC share with VDDPU */
};

&gpu {
	pu-supply = <&pu_dummy>; /* ldo-bypass:use pu_dummy if VDDSOC share with VDDPU */
};

&hdmi_audio {
	status = "okay";
};

&hdmi_cec {
	pinctrl-names = "default";
	pinctrl-0 = <&pinctrl_hdmi_cec_2>;
	status = "okay";
};

&hdmi_core {
	ipu_id = <0>;
	disp_id = <0>;
	status = "okay";
};

&hdmi_video {
	fsl,phy_reg_vlev = <0x0294>;
	fsl,phy_reg_cksymtx = <0x800d>;
	status = "okay";
};

&i2c1 {
	clock-frequency = <100000>;
	pinctrl-names = "default";
	pinctrl-0 = <&pinctrl_i2c1_2>;
	status = "okay";

	evervision: touch@38 { 
		compatible = "evervision_ts"; 
		reg = <0x38>; 
		interrupt-parent = <&gpio6>; 
		interrupts = <7 2>;  /* org 0 statt 2 ?*/
		status = "okay"; 
	}; 

	codec: sgtl5000@0a {
		compatible = "fsl,sgtl5000";
		reg = <0x0a>;
		clocks = <&clks 201>;
		VDDA-supply = <&reg_2p5v>;
		VDDIO-supply = <&reg_3p3v>;
	};
};

&i2c2 {
	clock-frequency = <100000>;
	pinctrl-names = "default";
	pinctrl-0 = <&pinctrl_i2c2_2>;
	status = "okay";


	pmic: pfuze100@08 {
		compatible = "fsl,pfuze100";
		reg = <0x08>;

		regulators {
			sw1a_reg: sw1ab {
				regulator-min-microvolt = <300000>;
				regulator-max-microvolt = <1875000>;
				regulator-boot-on;
				regulator-always-on;
				regulator-ramp-delay = <6250>;
			};

			sw1c_reg: sw1c {
				regulator-min-microvolt = <300000>;
				regulator-max-microvolt = <1875000>;
				regulator-boot-on;
				regulator-always-on;
				regulator-ramp-delay = <6250>;
			};

			sw2_reg: sw2 {
				regulator-min-microvolt = <800000>;
				regulator-max-microvolt = <3300000>;
				regulator-boot-on;
				regulator-always-on;
			};

			sw3a_reg: sw3a {
				regulator-min-microvolt = <400000>;
				regulator-max-microvolt = <1975000>;
				regulator-boot-on;
				regulator-always-on;
			};

			sw3b_reg: sw3b {
				regulator-min-microvolt = <400000>;
				regulator-max-microvolt = <1975000>;
				regulator-boot-on;
				regulator-always-on;
			};

			sw4_reg: sw4 {
				regulator-min-microvolt = <800000>;
				regulator-max-microvolt = <3300000>;
			};

			swbst_reg: swbst {
				regulator-min-microvolt = <5000000>;
				regulator-max-microvolt = <5150000>;
			};

			snvs_reg: vsnvs {
				regulator-min-microvolt = <1000000>;
				regulator-max-microvolt = <3000000>;
				regulator-boot-on;
				regulator-always-on;
			};

			vref_reg: vrefddr {
				regulator-boot-on;
				regulator-always-on;
			};

			vgen1_reg: vgen1 {
				regulator-min-microvolt = <800000>;
				regulator-max-microvolt = <1550000>;
                regulator-always-on;      /* maxle added */
			};

			vgen2_reg: vgen2 {
				regulator-min-microvolt = <800000>;
				regulator-max-microvolt = <1550000>;
                regulator-always-on;      /* maxle added */
			};

			vgen3_reg: vgen3 {
				regulator-min-microvolt = <1800000>;
				regulator-max-microvolt = <3300000>;
                regulator-always-on;      /* maxle added */
			};

			vgen4_reg: vgen4 {
				regulator-min-microvolt = <1800000>;
				regulator-max-microvolt = <3300000>;
				regulator-always-on;
			};

			vgen5_reg: vgen5 {
				regulator-min-microvolt = <1800000>;
				regulator-max-microvolt = <3300000>;
				regulator-always-on;
			};

			vgen6_reg: vgen6 {
				regulator-min-microvolt = <1800000>;
				regulator-max-microvolt = <3300000>;
				regulator-always-on;
			};
		};
	};

};

&i2c3 {
	clock-frequency = <100000>;
	pinctrl-names = "default";
	pinctrl-0 = <&pinctrl_i2c3_2>;
	status = "okay";

	hdmi: edid@50 {
		compatible = "fsl,imx6-hdmi-i2c";
		reg = <0x50>;
	};
 
 	ar1020@4D {
		compatible = "micro,ar1020_i2c";
		reg = <0x4D>;
        /* IRQ:  IMX_GPIO_NR(3, 26) wie beim SabreSD */ 	
		interrupt-parent = <&gpio3>;
		interrupts = <26 2>;
		status = "okay";
	};
};

&iomuxc {
	pinctrl-names = "default";
	pinctrl-0 = <&pinctrl_hog_1>;

	hog {
		pinctrl_hog_1: hoggrp-1 {
			fsl,pins = <
//				MX6QDL_PAD_GPIO_4__GPIO1_IO04   0x80000000	//s.u.
//				MX6QDL_PAD_GPIO_5__GPIO1_IO05   0x80000000	//s.u.
				MX6QDL_PAD_NANDF_D0__GPIO2_IO00 0x80000000
				MX6QDL_PAD_NANDF_D1__GPIO2_IO01 0x80000000
				MX6QDL_PAD_NANDF_D2__GPIO2_IO02 0x80000000
				MX6QDL_PAD_NANDF_D3__GPIO2_IO03 0x80000000
				MX6QDL_PAD_NANDF_ALE__GPIO6_IO08 0x80000000
				MX6QDL_PAD_NANDF_CLE__GPIO6_IO07 0x80000000  // irq cap touch
				MX6QDL_PAD_GPIO_0__CCM_CLKO1    0x130b0
				MX6QDL_PAD_NANDF_CS2__GPIO6_IO15 0x80000000
				MX6QDL_PAD_NANDF_CS3__GPIO6_IO16 0x80000000
				MX6QDL_PAD_EIM_D26__GPIO3_IO26 0x80000000
				MX6QDL_PAD_EIM_CS1__GPIO2_IO24 0x80000000
				MX6QDL_PAD_ENET_RXD0__GPIO1_IO27 0x80000000
				MX6QDL_PAD_EIM_A25__GPIO5_IO02 0x80000000
				MX6QDL_PAD_EIM_D23__GPIO3_IO23 0x80000000
				MX6QDL_PAD_ENET_TXD1__GPIO1_IO29 0x80000000
				MX6QDL_PAD_EIM_D22__GPIO3_IO22  0x80000000
				MX6QDL_PAD_NANDF_CS0__GPIO6_IO11 0x80000000
				MX6QDL_PAD_NANDF_CS1__GPIO6_IO14 0x80000000
				MX6QDL_PAD_EIM_EB3__GPIO2_IO31 0x80000000
				MX6QDL_PAD_EIM_D16__GPIO3_IO16 0x80000000
				MX6QDL_PAD_EIM_DA9__GPIO3_IO09 0x80000000
				MX6QDL_PAD_GPIO_4__GPIO1_IO04 0x80000000		/* Vol up  maxle: n.c. */
				MX6QDL_PAD_GPIO_5__GPIO1_IO05 0x80000000		/* Vol down  maxle: n.c. */
				MX6QDL_PAD_EIM_D29__GPIO3_IO29 0x80000000		/* suspend button */
				MX6QDL_PAD_SD3_RST__GPIO7_IO08 0x80000000		/* headphone detect */
				MX6QDL_PAD_GPIO_9__GPIO1_IO09 0x80000000		/* microphone detect */
				MX6QDL_PAD_GPIO_1__WDOG2_B 0x80000000
				MX6QDL_PAD_GPIO_2__GPIO1_IO02 0x80000000
				MX6QDL_PAD_ENET_TX_EN__GPIO1_IO28	0x1b0b0		/* ethernet IRQ */
				MX6QDL_PAD_ENET_CRS_DV__GPIO1_IO25 0x1b0b0   /* phy reset 0x80000000=ok  0x1b0b0=ok */

				MX6QDL_PAD_NANDF_D4__GPIO2_IO04   0x1b0b1        /* uart3_485 */
				MX6QDL_PAD_NANDF_D5__GPIO2_IO05   0x1b0b1        /* uart3_on */
				MX6QDL_PAD_NANDF_D6__GPIO2_IO06   0x1b0b1       /* V1:  uart3_ren  485 */
																/* V2:  uart3_hafu   low=fulldupex */ 
				MX6QDL_PAD_NANDF_D7__GPIO2_IO07   0x1b0b1       /* V1: uart3_den  485 */
																/* V2: uart3_term */
				MX6QDL_PAD_DISP0_DAT3__GPIO4_IO24  0x1b0b1	/*CS0 SPI3 Flash */

				MX6QDL_PAD_EIM_D19__GPIO3_IO19  0x80000000		/*pcie PowerON  1=on maxle neu 28.10.14*/
				MX6QDL_PAD_GPIO_17__GPIO7_IO12  0x80000000		/*pcie Reset 0=reset */
				MX6QDL_PAD_KEY_COL4__GPIO4_IO14 0x80000000		/*pcie Disable  0=disable */
			MX6QDL_PAD_EIM_D21__USB_OTG_OC 0x80000000		/* OTG Overcurrent */
			>;
		};
	};
};

#ifdef VOR_DUAL_CHANNEL
&ldb {
	ipu_id = <1>;
	disp_id = <1>;
	ext_ref = <1>;
	mode = "sep1"; 
	sec_ipu_id = <1>;
	sec_disp_id = <0>;
	status = "okay";
};
#else
&ldb {
	ipu_id = <1>;
	disp_id = <1>;
	ext_ref = <1>;
	mode = "spl1";
	sec_ipu_id = <1>;
	sec_disp_id = <0>;
	status = "okay";
};
#endif


&mipi_csi {
	status = "okay";
	ipu_id = <0>;
	csi_id = <1>;
	v_channel = <0>;
	lanes = <2>;
};

&mipi_dsi {
	dev_id = <0>;
	disp_id = <1>;
	lcd_panel = "TRULY-WVGA";
	disp-power-on-supply = <&reg_mipi_dsi_pwr_on>;
	resets = <&mipi_dsi_reset>;
	status = "okay";
};

&pcie {
	power-on-gpio = <&gpio3 19 0>; 
	reset-gpio = <&gpio7 12 0>;
	status = "okay";
};


&pwm1 {
	pinctrl-names = "default";
	pinctrl-0 = <&pinctrl_pwm1_1>;
	status = "okay";
};

&ssi2 {
	fsl,mode = "i2s-slave";
	status = "okay";
};

&uart1 {
	pinctrl-names = "default";
	pinctrl-0 = <&pinctrl_uart1_1>;
	status = "okay";
};

#if 0
/*  17.10.2014
    Anm: der handshake-Test mit stest funktioniert, egal ob
        'fsl,uart-has-rtscts;' gesetzt ist oder nicht
*/
&uart3 {
	/* normal rs232 UART */
	//compatible = "fsl,imx6q-uart", "fsl,imx21-uart";  set this??
	pinctrl-names = "default";
	pinctrl-0 = <&pinctrl_uart3_2>;
/*	fsl,uart-has-rtscts; */
	uart3-on = <&gpio2 5 GPIO_ACTIVE_LOW>;
	status = "okay";
};
#else
&uart3 {                           
	/* set compatible to xx-rs485 here, if you want to use
	   the "imx_rs485.c" (testing) driver for maxle
	 */
	compatible = "fsl,imx6q-uart-rs485", "fsl,imx21-uart-rs485";
	pinctrl-names = "default";
	pinctrl-0 = <&pinctrl_uart3_2>;
	// auskommentieren, dann funktioniert stest mit hs-test
	//fsl,uart-has-rtscts;			// maxle! Check it
	uart3-485 = <&gpio2 4 GPIO_ACTIVE_LOW>;
	uart3-on = <&gpio2 5 GPIO_ACTIVE_LOW>;
	uart3-hafu = <&gpio2 6 GPIO_ACTIVE_HIGH>;
	uart3-term = <&gpio2 7 GPIO_ACTIVE_HIGH>;
	status = "okay";
};
#endif

/* need changes in imx6qdl.dtsi */
&uart4 {							/* maxle added 04.11.14 */
	pinctrl-names = "default";
	pinctrl-0 = <&pinctrl_uart4_2>;
	status = "okay";
};

&uart5 {
	pinctrl-names = "default";
	pinctrl-0 = <&pinctrl_uart5_1>;
	status = "okay";
};

&flexcan1 {
	pinctrl-names = "default";
	pinctrl-0 = <&pinctrl_flexcan1_3>;   /* maxle pins */
#if 0
	pinctrl-assert-gpios = <&max7310_b 3 GPIO_ACTIVE_HIGH>; /* TX */
	trx-en-gpio = <&max7310_b 6 GPIO_ACTIVE_HIGH>;
	trx-stby-gpio = <&max7310_b 5 GPIO_ACTIVE_HIGH>;
#endif
	status = "disabled"; /* bei sabreauto pin conflict with fec */
};

&usbh1 {
	vbus-supply = <&reg_usb_h1_vbus>;
	status = "okay";
};

&usbotg {
	vbus-supply = <&reg_usb_otg_vbus>;
	pinctrl-names = "default";
	pinctrl-0 = <&pinctrl_usbotg_2>;
	disable-over-current;
	status = "okay";
};

&usdhc2 {
	pinctrl-names = "default";
	pinctrl-0 = <&pinctrl_usdhc2_2>;  // maxle: 4-Bit Interface
	cd-gpios = <&gpio2 2 0>;
	wp-gpios = <&gpio2 3 0>;
	no-1-8-v;
	keep-power-in-suspend;
	enable-sdio-wakeup;
	status = "okay";    // maxle: bis 13.10.14 disabled, now ok */
};

&usdhc3 {
	pinctrl-names = "default";
	pinctrl-0 = <&pinctrl_usdhc3_1>;
	cd-gpios = <&gpio2 0 0>;
	wp-gpios = <&gpio2 1 0>;
	no-1-8-v;
	keep-power-in-suspend;
	enable-sdio-wakeup;
	status = "okay";
};

&usdhc4 {
	pinctrl-names = "default";
	pinctrl-0 = <&pinctrl_usdhc4_1>;
	bus-width = <8>;
	non-removable;
	no-1-8-v;
	keep-power-in-suspend;
	status = "disabled";  // ab 13.10.2014 okay -> disabled
};

&vpu {
	pu-supply = <&pu_dummy>; /* ldo-bypass:use pu_dummy if VDDSOC share with VDDPU */
};
